#include <stdio.h>
#include <stdlib.h>
#define MAX 50

struct Edge{ int u,v,w; } edges[MAX];
int parent[MAX];

int find(int i){ while(parent[i]!=i) i=parent[i]; return i; }
void union_set(int i,int j){ parent[find(i)]=find(j); }

int compare(const void* a,const void* b){
    return ((struct Edge*)a)->w - ((struct Edge*)b)->w;
}

int main(){
    int n,e; printf("Enter vertices and edges: "); scanf("%d %d",&n,&e);
    printf("Enter edges (u v w):\n");
    for(int i=0;i<e;i++) scanf("%d %d %d",&edges[i].u,&edges[i].v,&edges[i].w);
    for(int i=0;i<n;i++) parent[i]=i;

    qsort(edges,e,sizeof(edges[0]),compare);
    printf("Edges in MST:\n");
    for(int i=0;i<e;i++){
        int u=edges[i].u, v=edges[i].v;
        if(find(u)!=find(v)){
            printf("%d - %d : %d\n",u,v,edges[i].w);
            union_set(u,v);
        }
    }
    return 0;
}
